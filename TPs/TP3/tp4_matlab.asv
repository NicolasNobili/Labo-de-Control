close all; clear all; clc
Ts = 0.01;

load('planta_ss.mat')
modelo_ss.C = [1 0 0 0; 0 0 1 0];
modelo_ss_d = c2d(modelo_ss,Ts);
%%
%===============================================
%
%                 OBSERVADOR
%
%===============================================

% Planteo los polos del observador en tiempo discreto y calculo L
% utlizadndo place()
%po_d = [0.45, 0.4, 0.35, 0.30];
po_d = [0.6 , 0.6 , 0.8 , 0.8];

% Calculo los polos continuos equivalentes teniendo en cuenta que se
% utilizo zoh para la discretizacion.
po_c = log(po_d)/0.01;

% Calculo de L
L = place(modelo_ss_d.A',modelo_ss_d.C',po_d)';

% Se implemento el observador en la planta real y se observo como responde
% ante una secuuencia de escalones en la entrada u. Luego se graficaron los
% resultados obtenidos comparando la observacion con las mediciones de los
% sensores.
data = readtable('prueba_observador20241117_160224');
figure(); 

subplot(4,1,1); hold on
plot(data.t, data.theta)
plot(data.t, data.theta_sim)
legend('$\theta$ real', '$\theta$ estimado', 'Location', 'best', 'Interpreter', 'latex', 'FontSize', 12) % Leyenda con fuente más grande

subplot(4,1,2); hold on
plot(data.t, data.theta_p)
plot(data.t, data.theta_p_sim)
legend('$\dot{\theta}$ real', '$\dot{\theta}$ estimado', 'Location', 'best', 'Interpreter', 'latex', 'FontSize', 12) % Leyenda con fuente más grande

subplot(4,1,3); hold on
plot(data.t, data.phi)
plot(data.t, data.phi_sim)
legend('$\phi$ real', '$\phi$ estimado', 'Location', 'best', 'Interpreter', 'latex', 'FontSize', 12) % Leyenda con fuente más grande

subplot(4,1,4); hold on
plot(data.t, data.phi_p)
plot(data.t, data.phi_p_sim)
legend('$\dot{\phi}$ diferencias finitas', '$\dot{\phi}$ estimado', 'Location', 'northeast', 'Interpreter', 'latex', 'FontSize', 12) % Leyenda con fuente más grande

%%
%===============================================
%
%                 CONTROLADOR
%
%===============================================

% Se plantean los polos deseados del sistema a lazo cerrado 
plc_c = [ -5 - 7.8646i ; -5 + 7.8646i ; -10+2i; -10-2i ];
%plc_c = [-5 - 5i ; -5 + 5i ; -6; -6.00000001];

% Se calculan los polos discretos equivalentes ('zoh') y luego se calcula
% la matriz de realimentacion de estados utilizando place
plc_d = exp(plc_c * 0.01);
K  = -place(modelo_ss_d.A , modelo_ss_d.B , plc_d);
A_des = modelo_ss_d.A+modelo_ss_d.B*K;
%%
% Simulo la respuesta al impulso del sistema
ss_impulso = ss(A_des,modelo_ss_d.B,[1 0 0 0; 0 1 0 0; 0 0 1 0; 0 0 0 1],0,Ts); 
% Crear la señal de impulso
valor_impulso = -0.85;
archivo_impulso_C = 'impulso_controlador20241117_235500.csv' ;
data_impulso_C = readtable(archivo_impulso_C);
t = data_impulso_C.t; 
impulso = zeros(size(t)); % Inicializar el vector con ceros
impulso(125:125+10) = valor_impulso; % Asignar el valor del impulso en t = 0

% Graficar la señal de impulso
figure;
stem(t, impulso, 'filled');
xlabel('Tiempo (s)');
ylabel('Amplitud');
title('Impulso Definido Personalmente');
grid on;

% Simulo la respuesta al impulso utilizando lsim() y grafico los resultados
% para cada variable de estado junto con las mediciones.
imp_sim = lsim(ss_impulso, impulso, t);

% THETA
figure('Position',[300,300,800,400]); hold on;
subplot(2,2,1); hold on
title('Respuesta Impulso $\theta$ : Simulacion', 'Interpreter', 'latex')
plot(t, imp_sim(:,1),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\theta$(rad)','Interpreter','Latex');

subplot(2,2,3); hold on
title('Respuesta Impulso $\theta$ : Observador', 'Interpreter', 'latex')
plot(t, data_impulso_C.theta_sim,'LineWidth', 2,'Color', [1, 0.5, 0])
xlabel('t(s)');
ylabel('$\theta$(rad)','Interpreter','Latex');

% THETA_P
subplot(2,2,2); hold on
title('Respuesta Impulso $\dot{\theta}$ : Simulacion', 'Interpreter', 'latex')
plot(t, imp_sim(:,2),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\theta}$(rad/s)','Interpreter','Latex');

subplot(2,2,4); hold on
title('Respuesta Impulso $\dot{\theta}$ : Observador', 'Interpreter', 'latex')
plot(t, data_impulso_C.theta_p_sim,'LineWidth', 2,'Color', [1, 0.5, 0])
xlabel('t(s)');
ylabel('$\dot{\theta}$(rad/s)','Interpreter','Latex');

% PHI
figure('Position',[300,300,800,400]); hold on;
subplot(2,2,1); hold on
title('Respuesta Impulso $\phi$ : Simulacion', 'Interpreter', 'latex')
plot(t, imp_sim(:,3),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\phi$(rad)','Interpreter','Latex');

subplot(2,2,3); hold on
title('Respuesta Impulso $\phi$ : Observador', 'Interpreter', 'latex')
plot(t, data_impulso_C.phi_sim,'LineWidth', 2,'Color', [1, 0.5, 0])
xlabel('t(s)');
ylabel('$\phi$(rad)','Interpreter','Latex');

% PHI_P
subplot(2,2,2); hold on
title('Respuesta Impulso $\dot{\phi}$ : Simulacion', 'Interpreter', 'latex')
plot(t, imp_sim(:,4),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\phi}$(rad/s)','Interpreter','Latex');

subplot(2,2,4); hold on
title('Respuesta Impulso $\dot{\phi}$ : Observador', 'Interpreter', 'latex')
plot(t, data_impulso_C.phi_p,'LineWidth', 2,'Color', [1, 0.5, 0])
xlabel('t(s)');
ylabel('$\dot{\phi}$(rad/s)','Interpreter','Latex');




%%
%===============================================
%
%                PRECOMPENSACION
%
%===============================================
% Calculo la matriz F de precompensacion:
A = modelo_ss_d.A;
B = modelo_ss_d.B;
C = modelo_ss_d.C;
F = (C * (eye(4) -(A + B * K))^(-1) * B);

f2 = 1/F(2);
A_des = modelo_ss_d.A+modelo_ss_d.B*K;
ss_precomp = ss(A_des,modelo_ss_d.B * (1/F),modelo_ss_d.C,0,Ts); 

% Simulo respuesta al escalon para phi. r_phi corresponde a la segunda
% entrada.

% Mediciones
archivo_test= 'test_controlador_precomp_20241120_132715.csv' ;
data = readtable(archivo_test);

% Parámetros
T_total = 20; % Duración total de la simulación en segundos
t = 0:Ts:T_total-Ts; % Vector de tiempo
t = data.t(1:1:T_total/Ts);
% Secuencia de escalones para r_phi
r_phi = zeros(size(t));
r_theta = zeros(size(t));

% Escalones para la segunda entrada
r_phi(t >= 0 & t < 4) = 0;
r_phi(t >= 4 & t < 8) = 0.3;
r_phi(t >= 8 & t < 12) = 0;
r_phi(t >= 12 & t < 16) = -0.3;
r_phi(t >= 16 & t <= 20) = 0;

% Crear la señal de entrada combinada
R = [r_theta, data.r_phi(1:T_total/Ts)]';

% Simulación del sistema
[Y, T_sim, X]  = lsim(ss_precomp, R, t);


% THETA
figure('Position',[300,300,800,500]); hold on;
subplot(2,1,1); hold on
title('Respuesta $\theta$ : Simulacion', 'Interpreter', 'latex')
plot(t, X(:,1),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\theta$(rad)','Interpreter','Latex');

subplot(2,1,2); hold on
title('Respuesta $\theta$ : Observador', 'Interpreter', 'latex')
plot(t,data.theta_sim(1:T_total/Ts),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\theta$(rad)','Interpreter','Latex');

% THETA_P
figure('Position',[300,300,800,500]); hold on;
subplot(2,1,1); hold on
title('Respuesta $\dot{\theta}$ : Simulacion', 'Interpreter', 'latex')
plot(t, X(:,2),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\theta}$(rad/s)','Interpreter','Latex');

subplot(2,1,2); hold on
title('Respuesta $\dot{\theta}$ : Observador', 'Interpreter', 'latex')
plot(t,data.theta_p_sim(1:T_total/Ts),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\theta}$(rad/s)','Interpreter','Latex');

% PHI
figure('Position',[300,300,800,400]); hold on;
subplot(2,1,1); hold on
title('Respuesta $\phi$ : Simulacion', 'Interpreter', 'latex')
plot(t, X(:,3),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\phi$(rad)','Interpreter','Latex');

subplot(2,1,2); hold on
title('Respuesta $\phi$ : Observador', 'Interpreter', 'latex')
plot(t,data.phi_sim(1:T_total/Ts),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\phi$(rad)','Interpreter','Latex');

% PHI_P
figure('Position',[300,300,800,500]); hold on;
subplot(2,1,1); hold on
title('Respuesta $\dot{\phi}$ : Simulacion', 'Interpreter', 'latex')
plot(t, X(:,4),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\phi}$(rad/s)','Interpreter','Latex');

subplot(2,1,2); hold on
title('Respuesta $\dot{\phi}$ : Observador', 'Interpreter', 'latex')
plot(t,data.phi_p(1:T_total/Ts),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\phi}$(rad/s)','Interpreter','Latex');



%%
%===============================================
%
%               CONTROL INTEGRAL
%
%===============================================


A_monio_r = [modelo_ss.A,zeros(4,1);-[0 0 1 0],zeros(1,1)];
B_monio_r = [[modelo_ss.B;zeros(1,1)],[0;0;0;0;1]];
C_monio_r = [1 0 0 0 0; 0 0 1 0 0];
D_monio_r = 0;

planta_ss_r = ss(A_monio_r,B_monio_r,C_monio_r,D_monio_r);
planta_ss_r_d = c2d(planta_ss_r,Ts,'zoh');

plc_c = [-6 - 5i ; -6 + 5i ; -8; -8.00000001 ; -15]; % Esta congifuracion de polos funciona,



plc_c = [  -2.8 - 8.2483i ;   -2.8 + 8.2483i ;   -4 + 3.0218i;   -4 - 3.0218i ; -40];


plc_d = exp(plc_c * 0.01);

K  = -place(planta_ss_r_d.A , planta_ss_r_d.B(:,1) , plc_d);

% Sistema lazo cerrado:
A_des = planta_ss_r_d.A + planta_ss_r_d.B(:,1) * K;
B_des = planta_ss_r_d.B(:,2);
C_des = planta_ss_r_d.C;

ss_lc_integral = ss(A_des,B_des,C_des,0,Ts);

%%
% Simulo respuesta al escalon para phi. r_phi corresponde a la segunda
% entrada.

% Mediciones
archivo_test= 'test_controlador_integral_20241120_123228.csv' ;
data = readtable(archivo_test);

% Parámetros
T_total = 20; % Duración total de la simulación en segundos
t = 0:Ts:T_total-Ts; % Vector de tiempo

% Secuencia de escalones para r_phi
r_phi = zeros(size(t));

% Escalones para la segunda entrada
r_phi(t >= 0 & t < 4) = 0;
r_phi(t >= 4 & t < 8) = 0.3;
r_phi(t >= 8 & t < 12) = 0;
r_phi(t >= 12 & t < 16) = -0.3;
r_phi(t >= 16 & t <= 20) = 0;


% Simulación del sistema
t = data.t
[Y, T_sim, X]  = lsim(ss_lc_integral,data.r_phi,t);




% THETA
figure('Position',[300,300,800,500]); hold on;
subplot(2,1,1); hold on
title('Respuesta $\theta$ : Simulacion', 'Interpreter', 'latex')
plot(t, X(:,1),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\theta$(rad)','Interpreter','Latex');

subplot(2,1,2); hold on
title('Respuesta $\theta$ : Observador', 'Interpreter', 'latex')
plot(t,data.theta_sim,'LineWidth', 2)
xlabel('t(s)');
ylabel('$\theta$(rad)','Interpreter','Latex');

% THETA_P
figure('Position',[300,300,800,500]); hold on;
subplot(2,1,1); hold on
title('Respuesta $\dot{\theta}$ : Simulacion', 'Interpreter', 'latex')
plot(t, X(:,2),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\theta}$(rad/s)','Interpreter','Latex');

subplot(2,1,2); hold on
title('Respuesta $\dot{\theta}$ : Observador', 'Interpreter', 'latex')
plot(t,data.theta_p_sim,'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\theta}$(rad/s)','Interpreter','Latex');

% PHI
figure('Position',[300,300,800,400]); hold on;
subplot(2,1,1); hold on
title('Respuesta $\phi$ : Simulacion', 'Interpreter', 'latex')
plot(t, X(:,3),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\phi$(rad)','Interpreter','Latex');

subplot(2,1,2); hold on
title('Respuesta $\phi$ : Observador', 'Interpreter', 'latex')
plot(t,data.phi_sim,'LineWidth', 2)
xlabel('t(s)');
ylabel('$\phi$(rad)','Interpreter','Latex');

% PHI_P
figure('Position',[300,300,800,500]); hold on;
subplot(2,1,1); hold on
title('Respuesta $\dot{\phi}$ : Simulacion', 'Interpreter', 'latex')
plot(t,X(:,4),'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\phi}$(rad/s)','Interpreter','Latex');

subplot(2,1,2); hold on
title('Respuesta $\dot{\phi}$ : Observador', 'Interpreter', 'latex')
plot(t,data.phi_p,'LineWidth', 2)
xlabel('t(s)');
ylabel('$\dot{\phi}$(rad/s)','Interpreter','Latex');




